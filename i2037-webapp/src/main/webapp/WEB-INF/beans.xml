<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:jaxrs="http://cxf.apache.org/jaxrs"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx" 
  xmlns:sec="http://www.springframework.org/schema/security"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.1.xsd
http://cxf.apache.org/jaxrs
http://cxf.apache.org/schemas/jaxrs.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd">

  <import resource="classpath:META-INF/cxf/cxf.xml" />

  <context:property-placeholder location="WEB-INF/i2037.properties"/>
  <context:annotation-config />

  <jaxrs:server id="services" address="/">
    <jaxrs:serviceBeans>
      <bean class="net.i2037.cellar.WineServiceImpl">
        <property name="wineDao" ref="wineDao" />
      </bean>
      <bean class="net.i2037.cellar.GrapeServiceImpl">
        <property name="grapeDao" ref="grapeDao" />
      </bean>
      <bean class="net.i2037.cellar.SessionServiceImpl">
          
      </bean>
      <bean class="net.i2037.go.GoServiceImpl" />
    </jaxrs:serviceBeans>
    <jaxrs:providers>
      <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />
    </jaxrs:providers>
  </jaxrs:server>

  <bean id="transactionManager"
    class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <tx:annotation-driven />

<!--   <bean id="cellarDB" class="org.apache.commons.dbcp.BasicDataSource" -->
<!--     destroy-method="close"> -->
<!--     <property name="driverClassName" value="org.postgresql.Driver" /> -->
<!--     <property name="url" -->
<!--       value="jdbc:postgresql://${db.cellar.host}:${db.cellar.port}/test?sslfactory=org.postgresql.ssl.NonValidatingFactory&amp;ssl=true" /> -->
<!--     <property name="username" value="${db.cellar.username}" /> -->
<!--     <property name="password" value="${db.cellar.password}" /> -->
<!--   </bean> -->

  <bean id="cellarDB" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url"
      value="jdbc:mysql://${i2037.db.host}/i2037" />
    <property name="username" value="${i2037.db.username}" />
    <property name="password" value="${i2037.db.password}" />
  </bean>
  
  <bean id="sessionFactory"
    class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="cellarDB" />
    <property name="annotatedClasses">
      <list>
        <value>net.i2037.cellar.model.WineImpl</value>
        <value>net.i2037.cellar.model.GrapeImpl</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <!-- hibernate.hbm2ddl.auto=create -->
      <value>hibernate.dialect=org.hibernate.dialect.MySQLDialect
        hibernate.show_sql=true
        hibernate.hbm2ddl.auto=update
      </value>
    </property>
  </bean>

  <bean id="grapeDao" class="net.i2037.cellar.model.GrapeDaoImpl">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <bean id="wineDao" class="net.i2037.cellar.model.WineDaoImpl">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- Security -->
  
  <!-- returns 403 Forbidden if the error url is not set -->
  <bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl" />
  
  <!-- returns 401 Unauthorized if the defaultFailureUrl is not set  -->
  <bean id="authFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler" />
   
  <!-- returns 403 forbidden -->
  <bean id="forbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />
  
  <sec:http entry-point-ref="forbiddenEntryPoint">
    <sec:access-denied-handler ref="accessDeniedHandler" /> 
    <sec:form-login authentication-failure-handler-ref="authFailureHandler" default-target-url="/cxf/session/user"/>    
    <sec:logout delete-cookies="JSESSIONID" logout-success-url="/cxf/session/loggedout" />
    <sec:session-management />
    <sec:intercept-url pattern="/cxf/session/loggedout" access="ROLE_ANONYMOUS,ROLE_USER" />       
    <sec:intercept-url pattern="/cxf/**" access="ROLE_USER" />   
    <sec:intercept-url pattern="/**" access="ROLE_ANONYMOUS,ROLE_USER" />
  </sec:http>

  <sec:authentication-manager>
    <sec:authentication-provider>
      <sec:user-service>
        <sec:user name="r.priestley@comanduk.co.uk" password="rapier"
          authorities="ROLE_USER, ROLE_ADMIN" />
      </sec:user-service>
    </sec:authentication-provider>
  </sec:authentication-manager>

</beans>
